// ******************************************************************************
// *                                                                            *
// *                       Appendix F: Compiler Messages                        *
// *                                                                            *
// ******************************************************************************

[appendix]
= Compiler Messages

== Format of Messages

This appendix describes the error messages generated by the Alan compiler.
The compiler presents the messages in the order of occurrence in the file.
The offending source line is always shown together with the message.
The following example illustrates a typical compiler output.

// @NOTE: Autogenerated Transcript
//    The following compiler log was auto-generated using the "ZILexample.*"
//    files in the "/src_scripts/" subfolder. It reconstructs the original
//    log found in the PDF manual (except that compiler messages have changed
//    slightly since).

// @TODO: A better transcript could be provided, for example with 2 errors on
//        the same line, which would better clarify how pointers work.

[literal, role="shell"]
................................................................................
ZILexample.alan <1>

   23.  If barfoo Is foobared Then <2>
=====>     1

  *1*   310 E : Identifier 'barfoo' not defined.

   27.      Exit north To Rumble.
=====>                    1 <3>

  *1*   310 E : Identifier 'Rumble' not defined. <4>

   28.      Exit west To Tumble.
=====>                   1

  *1*   310 E : Identifier 'Tumble' not defined.

   46.
=====>  1

  *1*   101 E : Syntax error. Inserting "start here ." before this token.
  *1*   211 E : Adventure must start at an instance inheriting from 'location'.


        5 error(s). <5>
        No detected warnings.
        1 informational message(s).
................................................................................

The following information is available in the compiler listing, framed for visibility:

// @TODO @thoni56: Improve slightly descriptions:
//    "Message indicator" and "pointer"could clarify better how the log works.
//    (small tweaks to the text should be enough).

<1> File name
<2> Line number and source text of a line
<3> Message indicator
<4> Message pointer, message number and text
<5> Message summary (three lines)

For information on how to select which levels of messages to show and where output is directed, refer to the options and their descriptions in section <<Compiler Switches,_Compiler Switches_>>.

== Message Explanations

For each message, a short description of the error, its possible causes, etc., are given.
Each reported message also indicates the severity of that error.
The message is supplemented with an indication of its severity.
An informational message (indicated by the letter `I`) simply gives some information to the user, a warning message (`W`) indicates an error but the compilation still generates a valid output (although not always what the user intended).
Error messages (`E`) indicate errors that have made it impossible to generate any output, but the compiler will continue to process all input.
Fatal (`F`) and system (`S`) messages always terminate the compilation process immediately.

The message descriptions below may also contain the special insertion markers `%n` (where `n` is a digit), which indicate that text will be inserted at that point in the message during compile time, e.g. the offending identifier or a file name.

..........................
100  Parsing resumed here.
..........................

[role="commentary"]
--
A severe syntax error was discovered.
Some input was skipped.
This error message marks the place where the parsing was restarted.
--


.................
101  %1 inserted.
.................

[role="commentary"]
--
A syntax error was discovered and one or more symbols inserted in the input in an attempt to recover.
--


................
102  %1 deleted.
................

[role="commentary"]
--
A syntax error was discovered and one or more symbols were skipped from the input in an attempt to recover.
--


.......................
103  %1 replaced by %2.
.......................

[role="commentary"]
--
A syntax error was discovered and one or more symbols were replaced by one or more other symbols in an attempt to recover.
--


............................................
104  Severe syntax error, construct ignored.
............................................

[role="commentary"]
--
An intricate syntax error was discovered.
A complete construct was skipped in an attempt to recover.
--


....................................
105  Syntax error, couldn't recover.
106  Parse stack overflow.
107  Parse table error.
108  Parsing terminated.
....................................

[role="commentary"]
--
Alan compiler implementation errors.
Should not occur!
--


.........................
150  Unterminated STRING.
.........................

[role="commentary"]
--
An opening double quote was not terminated by a closing quote before end of file.
Error message points to the opening quote.
Remember *STRINGs* may cover several lines.
--


..............................................
151  File name missing for $INCLUDE directive.
..............................................

[role="commentary"]
--
An include directive was given but no file was indicated.
The complete file name must be given according to the rules in section <<Filenames>>.
--


.................................................
198  Could not open output file '%1' for writing.
.................................................

[role="commentary"]
--
The indicated output file could not be opened, probably because the directory did not exist or the file or directory was write-protected.
--


..........................................
199  Adventure source file (%1) not found.
..........................................

[role="commentary"]
--
The source file given on the command line did not exist.
The Alan compiler adds the "`*.alan*`" extension to the file name given, if it did not include a period.
--


...............................................
201  Mismatched block identifier, '%1' assumed.
...............................................

[role="commentary"]
--
The identifier following a terminating `End` did not match the one given at the beginning of the construct.
This indicates an illegal nesting or a missed `End If`.
The identifier indicates to which block the `End` is assumed to belong.
--


.......................................................
202  Multiple usage of direction '%1' in this Exit.
203  Multiple definition of Exit '%1' in this location.
.......................................................

[role="commentary"]
--
The directional word indicated was used more than once, either in the same, or different `Exit` declaration from the `location`.
This is contradictory and not legal.
--


.................................................
204  Multiple definition of %1 DEFAULTS. Ignored.
.................................................

[role="commentary"]
--
Only one declaration of default attributes per type is allowed.
The second declaration is ignored.
--


....................................................
205  Multiple usage of '%1' in this VERB definition.
....................................................

[role="commentary"]
--
When specifying actions for multiple ``Verb``s in the same declaration, the indicated word occurred twice.
--


..........................................
206  Multiple definition of SYNTAX for %1.
..........................................

[role="commentary"]
--
More than one `Syntax` definition for the same `Verb` was found.
This is an error.
You should remove the offending one.
--


..............................
207  VERB '%1' is not defined.
..............................

[role="commentary"]
--
A `Syntax` construct defined the syntax for a verb that was never defined.
--


........................
208  '%1' is not a VERB.
........................

[role="commentary"]
--
The identifier on the left hand side of a `Syntax` definition was defined as something that was not a `Verb`.
--


...........................................
210  Action qualification not allowed here.
...........................................

[role="commentary"]
--
The `Before`, `After` and `Only` qualifiers may not be used in a `Does` clause in this context.
--


........................................
211  Adventure must start at a Location.
........................................

[role="commentary"]
--
You specified a *WHERE* expression in the `Start` section that did not specify an explicit `location`.
The `Start` section specifies where the hero starts and must be a `location`.
--


............................................
212  Syntax parameter '%1' overrides symbol.
............................................

[role="commentary"]
--
The `Syntax` definition valid in this context defined a symbol that is the same as an entity (class or instance).
The syntax parameter will take precedence.
--


........................................
213  Verb alternatives not allowed here.
........................................

[role="commentary"]
--
You may only specify different `Verb` body alternatives within objects.
The global `Verb` body and the verb body in a `location` may not have alternatives.
--


..............................................
214  Parameter not defined in syntax for '%1'.
..............................................

[role="commentary"]
--
The identifier given as the selector in a `Verb` body alternative was not defined in the `Syntax` for that verb.
--


................................................
215  Syntax not compatible with syntax for '%1'.
................................................

[role="commentary"]
--
To be able to use the same body for different verbs by supplying them in a comma-separated list in the `Verb` header they must all be compatible.
This means that they have the same number of parameters and the parameters have the same names.
Otherwise conflicts will arise when figuring out which parameter to use.
--


....................................................
216  Parameter '%1' multiply defined in this SYNTAX.
....................................................

[role="commentary"]
--
The parameter was defined more than once in the same `Syntax` definition.
--


...........................................................................
217  Only one multiple parameter allowed for each syntax. This one ignored.
...........................................................................

[role="commentary"]
--
To be able to use multiple parameters in a player command only one parameter may be marked as referring to multiple objects or actors using *ALL* or conjugations.
This is a warning, the `Syntax` will be as if the first multiple marker was the only one.
--


...........................................
218  Multiple definition of attribute '%1'.
...........................................

[role="commentary"]
--
The indicated attribute name was defined more than once in the same context (default attribute list or within the same entity).
Remove one definition.
--


.................................
220  Multiple definition of '%1'.
.................................

[role="commentary"]
--
The indicated word has multiple, and possibly different, definitions.
--


...................................................
221  Multiple class restriction for parameter '%1'.
...................................................

[role="commentary"]
--
The same parameter occurred more than once in the list of class restriction in the same `Syntax` definition.
--


............................................................
222  Identifier '%1' in class definition is not a parameter.
............................................................

[role="commentary"]
--
Only the parameters in the `Syntax` may be referenced in the class-restricting clause of a `Syntax` definition.
--


............................................................
230  No syntax defined for this verb, assumed '%1 (object)'.
............................................................

[role="commentary"]
--
This message is a warning to indicate that the default syntax handling has been used.
--


.................................
310  Identifier '%1' not defined.
.................................

[role="commentary"]
--
The indicated word was never defined.
It must be declared either as a `location`, an `object`, a `Container`, an `actor` or an `Event`.
--


......................
311  Must refer to %1.
......................

[role="commentary"]
--
The construct indicated does not refer to the correct kind of item, the message indicates which kind of item was expected.
--


.............................................................
312  Parameter not uniquely defined as %1, which is required.
.............................................................

[role="commentary"]
--
In certain contexts it is necessary to refer to a particular type of entity, e.g. the `In` expression must refer to a `Container` or an `object` with the `Container` property.
If the reference (the WHAT part) is a parameter identifier, this parameter must be restricted to be of the required type by use of parameter restrictions (such as `Where c IsA Container`).
--


....................................
315  Attribute not defined for '%1'.
....................................

[role="commentary"]
--
The indicated attribute is not defined for the particular `object`, `location` or `actor`.
It must either be a default attribute or be locally declared.
--


....................................
318  Entity '%1' is not a Container.
....................................

[role="commentary"]
--
The referenced entity (`object` or `actor`) was not declared to have the `Container` property, although the context required a container.
--


............................................................
320  Word '%1' belongs to multiple word classes (%2 and %3).
............................................................

[role="commentary"]
--
A word was declared as to belong to different word classes such as noun, verb, adjective etc.
Only multiple declarations that may lead to unexpected behaviour are reported, usually because of limitations in the current implementation.
Generally it is allowed to declare a word e.g. as both an adjective and a noun.
--


..........................................
321  Synonym target word '%1' not defined.
..........................................

[role="commentary"]
--
To define a synonym its target word (the word on the left side of the equal sign) must be defined as a proper word elsewhere in the source.
--


............................................
322  Word '%1' already defined as a synonym.
............................................

[role="commentary"]
--
A word may not be declared as a synonym for different target words.
--


...................................................
330  Wrong types of expression. Must be of %1 type.
...................................................

[role="commentary"]
--
In an expression, a value or an expression was used that had a type that was not allowed.
The message indicates the correct type.
--


..............................
331  Incompatible types in %1.
..............................

[role="commentary"]
--
The two values in an expression with a binary operator did not have compatible types, or the value used in a `Set` statement was not type compatible with the referenced attribute.
--


..........................................................
332  Type of local attribute must match default attribute.
..........................................................

[role="commentary"]
--
An attribute declared locally (within an `object`, `actor` or `location`) that has the same name as a default attribute, has to have the same type (Boolean, integer or string).
--


............................................................................
333  The word '%1' is defined as a synonym as well as of another word class.
............................................................................

[role="commentary"]
--
Synonyms must be words _not_ defined elsewhere.
--


.......................................
400  Script not defined for Actor '%1'.
.......................................

[role="commentary"]
--
No `Script` with the indicated identity was defined for the `actor`.
--


..........................................................
401  Actor reference required outside Actor specification.
..........................................................

[role="commentary"]
--
Inside an `actor` specification it is permissible to leave out the actor reference in a `Use` statement in which case the surrounding actor is assumed.
Outside actor specifications, the actor reference must always be supplied.
--


..........................................
402  An Actor can't be inside a Container.
..........................................

[role="commentary"]
--
The `Locate` statement tried to locate an `actor` inside a `Container`.
This is not allowed.
--


...................................................
403  Script number multiply defined for Actor '%1'.
...................................................

[role="commentary"]
--
The indicated number was used for more than one `Script` for the same `actor`.
--


.................................................
404  Attribute to %1 must be a default attribute.
.................................................

[role="commentary"]
--
To (((reference attribute))) reference attributes for `object`, `location` and `actor` the attribute used must be a default attribute, as all objects, locations or actors must have it.
--


..................................................................
405  The class of a parameter used in %1 must be uniquely defined.
..................................................................

[role="commentary"]
--
In some statements the class of the identifier must be determined during compile time.
This is, for example, the case in `Make` and `Set` statements.
--

// @CHECKME @thoni56:
//    The compiler message below is grammatically wrong:
//
//       "406  A parameter defined as Container HAVE NO default attributes."
//
//    Should be "HAS NO"!
//    Can't fix this though, unless it's fixed in the compiler iteself!
//    Should check the compiler source code to see if it was amended or is still so.

.................................................................
406  A parameter defined as Container have no default attributes.
.................................................................

[role="commentary"]
--
A parameter that was restricted to containers does not have any default attributes.
Actors, objects and locations have separate sets of default attributes.
In order to refer to an attribute on a parameter it must be restricted to one of these classes.
If the parameter also requires the container property, use `Container actor` or `Container object`.
--


.....................................................
407  Attribute in LIMITS must be a default attribute.
.....................................................

[role="commentary"]
--
Every object must possess the attribute which the `Limits` clause needs to test.
--


..............................................
408  Attributes in %1 must be of Boolean type.
..............................................

[role="commentary"]
--
The attribute referenced in the indicated context must be a Boolean attribute.
--


..........................................
409  No parameter defined in this context.
..........................................

[role="commentary"]
--
No parameter is defined in the context where a reference to `object` was made.
Parameters are only defined within ``Check``s and bodies of ``Verb``s, so the use of `object` (an obsolete construct, use the parameter identifier instead) is also restricted to those contexts.
See <<Run-Time Contexts,_Run-Time Contexts_>>.
--


.......................................
410  A parameter may not be used in %1.
.......................................

[role="commentary"]
--
In certain statements a parameter may not be used at all.
--


.................................
411  %1 ignored for Actor 'hero'.
.................................

[role="commentary"]
--
It is allowed to redefine the predefined actor `hero` (the player).
This makes it possible to define local attributes and descriptions for the hero.
However any definitions of scripts or initial location are ignored (the script is supplied by the player in his input and the initial location is defined in the `Start` section).
--


..........................................
412  'ACTOR' is not allowed inside events.
..........................................

[role="commentary"]
--
In ``Event``s no actor is active.
This means that no reference to the active `actor` can be made.
See <<Run-Time Contexts,_Run-Time Contexts_>>.
--


..............................................
413  Expression in %1 must be of integer type.
..............................................

[role="commentary"]
--
The context required a numeric expression.
--


.....................................
414  Invalid initial location for %1.
.....................................

[role="commentary"]
--
The initial `location` specified was not valid.
--


.................................................
415  Invalid Where specification in %1 statement.
.................................................

[role="commentary"]
--
The statement indicated does not allow the *WHERE* specification used.
--


.............................................
416  Interval of size 1 in RANDOM expression.
.............................................

[role="commentary"]
--
This message informs that the interval in a `Random` statement was just one single value, resulting in always returning the same value, not very random.
--


.......................................................................
417  Comparing two constant entities will always yield the same result.
.......................................................................

[role="commentary"]
--
The expression compared two identifiers none of which was a parameter.
This will always give the same result.
This is probably an error, but the message is still a warning as it gives a perfectly running adventure (but, perhaps not what you intended?).
--


..........................................................
418  Aggregate is only allowed on integer type attributes.
..........................................................

[role="commentary"]
--
The aggregates `Max` and `Sum` can only perform their calculation on integers.
--


........................................................
419  Expression in %1 must be of integer or string type.
........................................................

[role="commentary"]
--
In the indicated context only integer and string type expressions may be used.
--


................................
501  LOCATION '%1' has no Exits.
................................

[role="commentary"]
--
In case the hero is located at the indicated `location` he may not be able to escape from that location.
This may be intentional (as for a limbo location or a location with magic words to use as an escape) but the warning is presented as a reminder.
--


..........................................
600  Multiple use of option '%1', ignored.
..........................................

[role="commentary"]
--
The indicated `Option` was used more than once, this occurrence is ignored and the previous setting used.
--


..........................
601  Unknown option, '%1'.
..........................

[role="commentary"]
--
A word was given in the `Option` section that was not the name of an option.
--


...................................
602  Illegal value for option '%1'.
...................................

[role="commentary"]
--
The indicated `Option` does not allow the value used.
--


.....................
997  SYSTEM ERROR: %1
.....................

[role="commentary"]
--
A severe implementation dependent error has occurred (a bug!).
Please report.
--


...................................
998  Feature not implemented in %1.
...................................

[role="commentary"]
--
The combination of some syntactically correct but semantically tricky constructs is not yet implemented.
Please report.
--


............................
999  No Adventure generated.
............................

[role="commentary"]
--
When an error is detected this informational message is given to indicate that no executable adventure was output.
--

// EOF //
